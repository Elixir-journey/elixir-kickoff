name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.17'
          otp-version: '27.1.2'

      - name: Install dependencies
        run: mix deps.get

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Cache Dialyzer PLT
        uses: actions/cache@v3
        with:
          path: _build/dev/*.plt
          key: ${{ runner.os }}-dialyzer-plt-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-dialyzer-plt-
      
      - name: Cache documentation
        id: cache-docs
        uses: actions/cache@v3
        with:
          path: doc
          key: ${{ runner.os }}-docs-${{ hashFiles('mix.exs', 'lib/**/*', 'README.md') }}
          restore-keys: |
            ${{ runner.os }}-docs-

      - name: Run formatter check
        run: mix format --check-formatted

      - name: Run Credo for linting
        run: mix credo --strict

      - name: Run Dialyzer for type checking
        run: mix dialyzer
        env:
          MIX_ENV: dev

      - name: Run tests
        run: mix test

       - name: Generate documentation
        if: !steps.cache-docs.outputs.cache-hit
        working-directory: ${{ github.workspace }} # Ensure this is run in the root directory
        run: mix docs
        env:
          MIX_ENV: dev

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: doc/

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add doc/
          git commit -m "Update documentation [skip ci]" || echo "No changes to commit"
          git push origin ${{ github.head_ref || github.ref_name }}
